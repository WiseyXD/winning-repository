// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email  String @unique
  password String
  role UserRole
  quizs Quiz[] 
}

enum UserRole {
  Student
  Admin
}

// Define the Quiz model
model Quiz {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId // You can customize this ID field according to your needs
  title       String
  description String
  duration Int
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String   @db.ObjectId
  questions   Question[]
}

// Define the Question model
model Question {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId// You can customize this ID field according to your needs
  text        String
  options     Option[]  // Array of options for the question
  quiz        Quiz      @relation(fields: [quizId], references: [id])
  quizId      String    @db.ObjectId
}

// Define the Option model
model Option {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId // You can customize this ID field according to your needs
  text     String
  right    Boolean @default(false)
  question Question @relation(fields: [questionId], references: [id])
  questionId String @db.ObjectId
}